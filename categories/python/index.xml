<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Python - 分类 - geekbyの自留地</title><link>https://www.geekby.cn/categories/python/</link><description>Python - 分类 - geekbyの自留地</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>hfutbj233@163.com (JackBai)</managingEditor><webMaster>hfutbj233@163.com (JackBai)</webMaster><lastBuildDate>Tue, 29 Dec 2020 15:36:31 +0800</lastBuildDate><atom:link href="https://www.geekby.cn/categories/python/" rel="self" type="application/rss+xml"/><item><title>利用python 查询操作JIRA中的issues</title><link>https://www.geekby.cn/python-jira-issue/</link><pubDate>Tue, 29 Dec 2020 15:36:31 +0800</pubDate><author><name>JackBai</name></author><guid>https://www.geekby.cn/python-jira-issue/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://cdn.staticaly.com/gh/jackbai233/image-hosting@master/20211024/python-jira.7170xk7v9p40.png" referrerpolicy="no-referrer">
            </div><p>最近有个需求是获取某些符合条件的jira数据，在统计后使用echarts可视化度量出来。后端代码打算用 Python实现。</p>]]></description></item><item><title>python操作TFS的Work Item</title><link>https://www.geekby.cn/python-tfs/</link><pubDate>Sat, 25 Apr 2020 16:00:45 +0800</pubDate><author><name>JackBai</name></author><guid>https://www.geekby.cn/python-tfs/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://cdn.staticaly.com/gh/jackbai233/image-hosting@master/20211024/python-tfs.5r4p0wc7jjo0.png" referrerpolicy="no-referrer">
            </div><p>因工作需要，现需要将jira切换到微软的TFS(Team Foundation Server)，并自动化创建TFS的任务(即 Work Item)。根据该需求，我首先使用了它的<a href="https://docs.microsoft.com/zh-cn/rest/api/azure/devops/wit/work%20items?view=azure-devops-rest-6.0" target="_blank" rel="noopener noreffer">REST API</a>进行尝试，但发现有些麻烦，后面找到了一个python库dohq-tfs，该库<a href="https://devopshq.github.io/tfs/installation.html" target="_blank" rel="noopener noreffer">文档</a>友好，操作简单方便，很适合快速的开发相应的脚本。</p>]]></description></item><item><title>Django使用DataTables插件总结</title><link>https://www.geekby.cn/django-datatables/</link><pubDate>Sat, 15 Sep 2018 16:25:50 +0800</pubDate><author><name>JackBai</name></author><guid>https://www.geekby.cn/django-datatables/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://cdn.staticaly.com/gh/jackbai233/image-hosting@master/20211024/django-datatables.4s58ppjmua60.png" referrerpolicy="no-referrer">
            </div><p>Datatables插件是一款方便简单的展示数据的列表插件，本文介绍了怎样在Django中使用它。</p>]]></description></item><item><title>基于grpc的流式方式实现双向通讯(python)</title><link>https://www.geekby.cn/python-grpc/</link><pubDate>Sat, 07 Dec 2019 16:39:30 +0800</pubDate><author><name>JackBai</name></author><guid>https://www.geekby.cn/python-grpc/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://cdn.staticaly.com/gh/jackbai233/image-hosting@master/20211024/python-grpc.55ic4zobjng0.png" referrerpolicy="no-referrer">
            </div><p>这篇文章介绍了通过grpc的流式通信方式实现双向通讯的方法.</p>]]></description></item><item><title>Django 用Session和Cookie分别实现记住用户登录状态</title><link>https://www.geekby.cn/django-session-cookie/</link><pubDate>Thu, 29 Aug 2019 16:48:52 +0800</pubDate><author><name>JackBai</name></author><guid>https://www.geekby.cn/django-session-cookie/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://cdn.staticaly.com/gh/jackbai233/image-hosting@master/20211024/django-session.65zgb9wmmrs0.png" referrerpolicy="no-referrer">
            </div><p>由于http协议的请求是无状态的。故为了让用户在浏览器中再次访问该服务端时，他的登录状态能够保留（也可翻译为该用户访问这个服务端其他网页时不需再重复进行用户认证）。我们可以采用Cookie或Session这两种方式来让浏览器记住用户。</p>]]></description></item><item><title>Django 实现登录后跳转</title><link>https://www.geekby.cn/django-login/</link><pubDate>Thu, 29 Aug 2019 16:56:04 +0800</pubDate><author><name>JackBai</name></author><guid>https://www.geekby.cn/django-login/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://cdn.staticaly.com/gh/jackbai233/image-hosting@master/20211024/django-login.303wk0edalg0.png" referrerpolicy="no-referrer">
            </div><p>这篇文章介绍了怎样在Django中实现登录后跳转.</p>]]></description></item></channel></rss>